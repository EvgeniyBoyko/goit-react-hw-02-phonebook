{"version":3,"sources":["components/Section/Section.jsx","components/PhoneBookContacts/initialState.js","components/ContactForm/fields.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/PhoneBookContacts/PhoneBookContacts.jsx","App.js","index.js"],"names":["Section","title","children","className","styles","container","initialState","contacts","id","name","number","filter","fields","type","required","ContactForm","state","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","onSubmitProp","props","reset","this","onSubmit","onChange","pattern","buttonForm","Component","ContactItem","onClickRemove","contactItem","contactsListButton","onClick","ContactList","filteredContacts","onRemove","result","map","length","contactsList","Filter","onChangeFilter","target","defaultProps","PhoneBookContacts","addContact","newContact","uuidv4","prevState","handleChangeFilter","contact","toLowerCase","includes","handleRemove","contactId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a0d480f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2 className={styles.title}> {title} </h2>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n \r\nexport default Section;","export const initialState = {\r\n    contacts: [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n     name: '',\r\n    number: '',\r\n};\r\n\r\n","export const fields = {\r\n  userName: {\r\n    type: \"text\",\r\n    name: \"userName\",\r\n    title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n    required: true,\r\n  },\r\n  userPhone: {\r\n    type: \"tel\",\r\n    name: \"userPhone\",\r\n    title: \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n    required: true,\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\r\n// import { fields } from \"./fields\";\r\nimport { initialState } from \"../PhoneBookContacts/initialState\";\r\nimport {fields} from './fields';\r\n\r\n\r\n class ContactForm extends Component {\r\n\r\n    state = {...initialState};\r\n\r\n     handleChange = (name, e) => {\r\n         this.setState({\r\n             [name]: e.currentTarget.value\r\n         })\r\n     };\r\n    \r\n    // handleChange = (e) => {\r\n    //     const { name, value } = e.currentTarget;\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     })\r\n    // }\r\n     \r\n    // handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     const {name, number} = this.state;\r\n    //     const {contacts, onAddContact} = this.props;\r\n    //     const contactInState = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n    //     contactInState && alert(`${contactInState.name} is already in contacts!`);\r\n    //     if (!contactInState && name && number) {\r\n    //         onAddContact(name, number);\r\n    //         this.setState(initialState);\r\n    //         return\r\n    //     }\r\n    //  }\r\n     \r\n     handleSubmit = e => {\r\n         e.preventDefault();\r\n         const { name, number } = this.state;\r\n         const { onSubmitProp } = this.props;\r\n         onSubmitProp(name, number)\r\n         this.reset();\r\n     };\r\n    \r\n     reset = () => {\r\n         this.setState({ name: \"\", number: \"\" })\r\n     };\r\n     \r\n    render() {\r\n        const { name, number } = this.state;\r\n        const { handleChange, handleSubmit } = this;\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    <p>Name</p>\r\n                    <input {...fields.userName}\r\n                        value={name}\r\n                        onChange={e => handleChange('name', e)}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" />\r\n                </label>\r\n                <label>\r\n                    <p>Number</p>\r\n                    <input {...fields.userPhone}\r\n                        value={number}\r\n                        onChange={e => handleChange('number', e)}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\" />\r\n                    </label>\r\n                <button type=\"submit\" className={styles.buttonForm}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n \r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onSubmitProp: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport styles from \"./ContactList.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactItem = ({ name, number, onClickRemove }) => {\r\n    return (\r\n        <li className={styles.contactItem}>\r\n            <p>{name}: {number}</p>\r\n            <button type=\"button\" className={styles.contactsListButton} onClick={onClickRemove}>Delete</button>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst ContactList = ({ filteredContacts, onRemove }) => {\r\n    const result = filteredContacts.map(({ id, name, number }) => (\r\n        <ContactItem key={id} name={name} number={number} onClickRemove={() => onRemove(id)} />\r\n    ));\r\n    \r\n    return (\r\n        filteredContacts.length > 0 && (\r\n            <ul className={styles.contactsList}>\r\n                {result}\r\n            </ul>\r\n        )\r\n    )\r\n};\r\n \r\nexport default ContactList;\r\n\r\nContactItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClickRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onRemove: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css'\r\n\r\nconst Filter = ({value, onChangeFilter}) => {\r\n    return (\r\n        <div className={styles.filter}>\r\n            <p>Find contacts by name</p>\r\n            <input type=\"text\" value={value} onChange={e => onChangeFilter(e.target.value)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\n// import styles from './PhoneBookContacts.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Section from '../Section/index';\r\nimport ContactForm from '../ContactForm/index';\r\nimport ContactList from '../ContactList/index';\r\nimport Filter from '../Filter/index';\r\nimport { initialState } from \"./initialState\";\r\n\r\n\r\nclass PhoneBookContacts extends Component {\r\n\r\n  state = { ...initialState };\r\n\r\n  addContact = (name, number) => {\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [...prevState.contacts, newContact],\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChangeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  filteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n  };\r\n\r\n  handleRemove = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const { addContact, handleChangeFilter, handleRemove } = this;\r\n    const filteredContacts = this.filteredContacts();\r\n\r\n    return(\r\n      <>\r\n        <Section title={'Phonebook'}>\r\n            <ContactForm contacts={contacts} onSubmitProp={addContact}/>\r\n        </Section>\r\n        <Section title={'Contacts'}>\r\n          <Filter value={filter} onChangeFilter={handleChangeFilter}/>\r\n          <ContactList filteredContacts={filteredContacts} onRemove={handleRemove} />\r\n        </Section>\r\n      </>\r\n    )\r\n  };\r\n};\r\n \r\nexport default PhoneBookContacts;","import './App.css';\nimport PhoneBookContacts from './components/PhoneBookContacts/index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PhoneBookContacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}